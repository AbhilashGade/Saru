name: Semantic Versioning and Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  semver:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
    - name: Install cargo-bump
      run: cargo install cargo-bump
    - name: Get commit messages
      id: get_commits
      run: echo "commits=$(git log --format=%B -n 1 ${{ github.event.after }})" >> $GITHUB_OUTPUT
    - name: Determine version bump
      id: bump_version
      run: |
        if [[ "${{ steps.get_commits.outputs.commits }}" == *"BREAKING CHANGE"* ]]; then
          echo "bump=major" >> $GITHUB_OUTPUT
        elif [[ "${{ steps.get_commits.outputs.commits }}" == *"feat:"* ]]; then
          echo "bump=minor" >> $GITHUB_OUTPUT
        else
          echo "bump=patch" >> $GITHUB_OUTPUT
        fi
    - name: Bump version
      id: version
      run: |
        cd saru_rust
        cargo bump ${{ steps.bump_version.outputs.bump }}
        echo "new_version=$(cargo pkgid | cut -d# -f2 | cut -d: -f2)" >> $GITHUB_OUTPUT
    - name: Generate Changelog
      id: changelog
      uses: heinrichreimer/github-changelog-generator-action@v2.3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        output: CHANGELOG.md
    - name: Commit version bump and changelog
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add saru_rust/Cargo.toml CHANGELOG.md
        git commit -m "Bump version to ${{ steps.version.outputs.new_version }} and update changelog"
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.new_version }}
        release_name: Release ${{ steps.version.outputs.new_version }}
        body: |
          Changes in this Release
          ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: false